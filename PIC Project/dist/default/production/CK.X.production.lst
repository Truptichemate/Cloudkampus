

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 12 15:05:03 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176     0007                     _PORTCbits      set	7
   177     0013                     _SSPBUF         set	19
   178     0014                     _SSPCON         set	20
   179     0006                     _PORTB          set	6
   180     0032                     _RB2            set	50
   181     0031                     _RB1            set	49
   182     0030                     _RB0            set	48
   183     0033                     _RB3            set	51
   184     0094                     _SSPSTATbits    set	148
   185     0094                     _SSPSTAT        set	148
   186     0093                     _SSPADD         set	147
   187     0091                     _SSPCON2        set	145
   188     0087                     _TRISCbits      set	135
   189     0086                     _TRISB          set	134
   190                           
   191                           	psect	cinit
   192     07FC                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07FC                     __initialization:
   196     07FC                     end_of_initialization:	
   197                           ;End of C runtime variable initialization code
   198                           
   199     07FC                     __end_of__initialization:
   200     07FC  0183               	clrf	3
   201     07FD  120A  118A  2FC3   	ljmp	_main	;jump to C main() function
   202                           
   203                           	psect	cstackCOMMON
   204     0070                     __pcstackCOMMON:
   205     0070                     ?_initSystem:
   206     0070                     ?_initI2C:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_sendI2CData:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_handleDoorStatus:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ?_controlLighting:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ?_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     sendI2CData@data:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ??_initSystem:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ??_initI2C:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ??_sendI2CData:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ??_handleDoorStatus:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ??_controlLighting:	
   237                           ; 1 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241     0070                     	ds	1
   242     0071                     ??_main:
   243                           
   244                           ; 1 bytes @ 0x1
   245     0071                     	ds	3
   246                           
   247                           	psect	maintext
   248     07C3                     __pmaintext:	
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 64 in file "ck.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;		None
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0, pclath, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : B00/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   268 ;;      Params:         0       0       0       0       0
   269 ;;      Locals:         0       0       0       0       0
   270 ;;      Temps:          3       0       0       0       0
   271 ;;      Totals:         3       0       0       0       0
   272 ;;Total ram usage:        3 bytes
   273 ;; Hardware stack levels required when called: 1
   274 ;; This function calls:
   275 ;;		_controlLighting
   276 ;;		_handleDoorStatus
   277 ;;		_initI2C
   278 ;;		_initSystem
   279 ;;		_sendI2CData
   280 ;; This function is called by:
   281 ;;		Startup code after reset
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285     07C3                     _main:	
   286                           ;psect for function _main
   287                           
   288     07C3                     l635:	
   289                           ;incstack = 0
   290                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   291                           
   292                           
   293                           ;ck.c: 65:     initSystem();
   294     07C3  120A  118A  2780  120A  118A  	fcall	_initSystem
   295                           
   296                           ;ck.c: 66:     initI2C();
   297     07C8  120A  118A  27A2  120A  118A  	fcall	_initI2C
   298     07CD                     l60:	
   299                           ;ck.c: 68:     while (1) {
   300                           
   301                           
   302                           ;ck.c: 69:         handleDoorStatus();
   303     07CD  120A  118A  278A  120A  118A  	fcall	_handleDoorStatus
   304                           
   305                           ;ck.c: 70:         controlLighting();
   306     07D2  120A  118A  27AF  120A  118A  	fcall	_controlLighting
   307     07D7                     l637:
   308                           
   309                           ;ck.c: 73:         sendI2CData(RB0);
   310     07D7  3000               	movlw	0
   311     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   312     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   313     07DA  1806               	btfsc	6,0	;volatile
   314     07DB  3001               	movlw	1
   315     07DC  120A  118A  2796  120A  118A  	fcall	_sendI2CData
   316     07E1                     l639:
   317                           
   318                           ;ck.c: 74:         sendI2CData(RB2);
   319     07E1  3000               	movlw	0
   320     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   321     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   322     07E4  1906               	btfsc	6,2	;volatile
   323     07E5  3001               	movlw	1
   324     07E6  120A  118A  2796  120A  118A  	fcall	_sendI2CData
   325     07EB                     l641:
   326                           
   327                           ;ck.c: 76:         _delay((unsigned long)((100)*(20000000/4000.0)));
   328     07EB  3003               	movlw	3
   329     07EC  00F3               	movwf	??_main+2
   330     07ED  308A               	movlw	138
   331     07EE  00F2               	movwf	??_main+1
   332     07EF  3055               	movlw	85
   333     07F0  00F1               	movwf	??_main
   334     07F1                     u67:
   335     07F1  0BF1               	decfsz	??_main,f
   336     07F2  2FF1               	goto	u67
   337     07F3  0BF2               	decfsz	??_main+1,f
   338     07F4  2FF1               	goto	u67
   339     07F5  0BF3               	decfsz	??_main+2,f
   340     07F6  2FF1               	goto	u67
   341     07F7  2FF8               	nop2
   342     07F8  2FCD               	goto	l60
   343     07F9  120A  118A  2800   	ljmp	start
   344     07FC                     __end_of_main:
   345                           
   346                           	psect	text1
   347     0796                     __ptext1:	
   348 ;; *************** function _sendI2CData *****************
   349 ;; Defined at:
   350 ;;		line 31 in file "ck.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;  data            1    wreg     unsigned char 
   353 ;; Auto vars:     Size  Location     Type
   354 ;;  data            1    0[COMMON] unsigned char 
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         1       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         1       0       0       0       0
   368 ;;Total ram usage:        1 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377     0796                     _sendI2CData:	
   378                           ;psect for function _sendI2CData
   379                           
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _sendI2CData: [wreg]
   383                           ;sendI2CData@data stored from wreg
   384     0796  00F0               	movwf	sendI2CData@data
   385     0797                     l621:
   386                           
   387                           ;ck.c: 32:     SSPBUF = data;
   388     0797  0870               	movf	sendI2CData@data,w
   389     0798  1283               	bcf	3,5	;RP0=0, select bank0
   390     0799  1303               	bcf	3,6	;RP1=0, select bank0
   391     079A  0093               	movwf	19	;volatile
   392     079B                     l39:	
   393                           ;ck.c: 33:     while (SSPSTATbits.BF == 0);
   394                           
   395     079B  1683               	bsf	3,5	;RP0=1, select bank1
   396     079C  1303               	bcf	3,6	;RP1=0, select bank1
   397     079D  1C14               	btfss	20,0	;volatile
   398     079E  2FA0               	goto	u11
   399     079F  2FA1               	goto	u10
   400     07A0                     u11:
   401     07A0  2F9B               	goto	l39
   402     07A1                     u10:
   403     07A1                     l42:
   404     07A1  0008               	return
   405     07A2                     __end_of_sendI2CData:
   406                           
   407                           	psect	text2
   408     0780                     __ptext2:	
   409 ;; *************** function _initSystem *****************
   410 ;; Defined at:
   411 ;;		line 14 in file "ck.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		status,2
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels used: 1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438     0780                     _initSystem:	
   439                           ;psect for function _initSystem
   440                           
   441     0780                     l607:	
   442                           ;incstack = 0
   443                           ; Regs used in _initSystem: [status,2]
   444                           
   445                           
   446                           ;ck.c: 15:     TRISB = 0x0F;
   447     0780  300F               	movlw	15
   448     0781  1683               	bsf	3,5	;RP0=1, select bank1
   449     0782  1303               	bcf	3,6	;RP1=0, select bank1
   450     0783  0086               	movwf	6	;volatile
   451                           
   452                           ;ck.c: 16:     TRISCbits.TRISC3 = 1;
   453     0784  1587               	bsf	7,3	;volatile
   454                           
   455                           ;ck.c: 17:     TRISCbits.TRISC4 = 1;
   456     0785  1607               	bsf	7,4	;volatile
   457     0786                     l609:
   458                           
   459                           ;ck.c: 18:     PORTB = 0x00;
   460     0786  1283               	bcf	3,5	;RP0=0, select bank0
   461     0787  1303               	bcf	3,6	;RP1=0, select bank0
   462     0788  0186               	clrf	6	;volatile
   463     0789                     l33:
   464     0789  0008               	return
   465     078A                     __end_of_initSystem:
   466                           
   467                           	psect	text3
   468     07A2                     __ptext3:	
   469 ;; *************** function _initI2C *****************
   470 ;; Defined at:
   471 ;;		line 21 in file "ck.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		status,2
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498     07A2                     _initI2C:	
   499                           ;psect for function _initI2C
   500                           
   501     07A2                     l611:	
   502                           ;incstack = 0
   503                           ; Regs used in _initI2C: [status,2]
   504                           
   505                           
   506                           ;ck.c: 22:     SSPCON = 0x28;
   507     07A2  3028               	movlw	40
   508     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   509     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   510     07A5  0094               	movwf	20	;volatile
   511     07A6                     l613:
   512                           
   513                           ;ck.c: 23:     SSPCON2 = 0x00;
   514     07A6  1683               	bsf	3,5	;RP0=1, select bank1
   515     07A7  1303               	bcf	3,6	;RP1=0, select bank1
   516     07A8  0191               	clrf	17	;volatile
   517     07A9                     l615:
   518                           
   519                           ;ck.c: 24:     SSPADD = 0x50;
   520     07A9  3050               	movlw	80
   521     07AA  0093               	movwf	19	;volatile
   522                           
   523                           ;ck.c: 25:     SSPSTAT = 0x00;
   524     07AB  0194               	clrf	20	;volatile
   525     07AC                     l617:
   526                           
   527                           ;ck.c: 26:     TRISCbits.TRISC3 = 1;
   528     07AC  1587               	bsf	7,3	;volatile
   529     07AD                     l619:
   530                           
   531                           ;ck.c: 27:     TRISCbits.TRISC4 = 1;
   532     07AD  1607               	bsf	7,4	;volatile
   533     07AE                     l36:
   534     07AE  0008               	return
   535     07AF                     __end_of_initI2C:
   536                           
   537                           	psect	text4
   538     078A                     __ptext4:	
   539 ;; *************** function _handleDoorStatus *****************
   540 ;; Defined at:
   541 ;;		line 37 in file "ck.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		None
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568     078A                     _handleDoorStatus:	
   569                           ;psect for function _handleDoorStatus
   570                           
   571     078A                     l623:	
   572                           ;incstack = 0
   573                           ; Regs used in _handleDoorStatus: []
   574                           
   575                           
   576                           ;ck.c: 38:     if (RB3 == 1) {
   577     078A  1283               	bcf	3,5	;RP0=0, select bank0
   578     078B  1303               	bcf	3,6	;RP1=0, select bank0
   579     078C  1D86               	btfss	6,3	;volatile
   580     078D  2F8F               	goto	u21
   581     078E  2F90               	goto	u20
   582     078F                     u21:
   583     078F  2F93               	goto	l45
   584     0790                     u20:
   585     0790                     l625:
   586                           
   587                           ;ck.c: 39:         RB0 = 1;
   588     0790  1406               	bsf	6,0	;volatile
   589                           
   590                           ;ck.c: 40:         RB1 = 0;
   591     0791  1086               	bcf	6,1	;volatile
   592                           
   593                           ;ck.c: 41:     } else {
   594     0792  2F95               	goto	l47
   595     0793                     l45:
   596                           
   597                           ;ck.c: 42:         RB0 = 0;
   598     0793  1006               	bcf	6,0	;volatile
   599                           
   600                           ;ck.c: 43:         RB1 = 1;
   601     0794  1486               	bsf	6,1	;volatile
   602     0795                     l47:
   603     0795  0008               	return
   604     0796                     __end_of_handleDoorStatus:
   605                           
   606                           	psect	text5
   607     07AF                     __ptext5:	
   608 ;; *************** function _controlLighting *****************
   609 ;; Defined at:
   610 ;;		line 48 in file "ck.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		None
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0
   627 ;;      Totals:         0       0       0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels used: 1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637     07AF                     _controlLighting:	
   638                           ;psect for function _controlLighting
   639                           
   640     07AF                     l627:	
   641                           ;incstack = 0
   642                           ; Regs used in _controlLighting: []
   643                           
   644                           
   645                           ;ck.c: 49:     if (RB2 == 1) {
   646     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   647     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   648     07B1  1D06               	btfss	6,2	;volatile
   649     07B2  2FB4               	goto	u31
   650     07B3  2FB5               	goto	u30
   651     07B4                     u31:
   652     07B4  2FBD               	goto	l50
   653     07B5                     u30:
   654     07B5                     l629:
   655                           
   656                           ;ck.c: 51:         if (RB0 == 1) {
   657     07B5  1C06               	btfss	6,0	;volatile
   658     07B6  2FB8               	goto	u41
   659     07B7  2FB9               	goto	u40
   660     07B8                     u41:
   661     07B8  2FBB               	goto	l51
   662     07B9                     u40:
   663     07B9                     l631:
   664                           
   665                           ;ck.c: 52:             PORTCbits.RC0 = 1;
   666     07B9  1407               	bsf	7,0	;volatile
   667                           
   668                           ;ck.c: 53:         } else {
   669     07BA  2FC2               	goto	l55
   670     07BB                     l51:
   671                           
   672                           ;ck.c: 54:             PORTCbits.RC0 = 0;
   673     07BB  1007               	bcf	7,0	;volatile
   674     07BC  2FC2               	goto	l55
   675     07BD                     l50:
   676                           
   677                           ;ck.c: 58:         if (RB1 == 1) {
   678     07BD  1C86               	btfss	6,1	;volatile
   679     07BE  2FC0               	goto	u51
   680     07BF  2FC1               	goto	u50
   681     07C0                     u51:
   682     07C0  2FC2               	goto	l55
   683     07C1                     u50:
   684     07C1                     l633:
   685                           
   686                           ;ck.c: 59:             PORTCbits.RC0 = 0;
   687     07C1  1007               	bcf	7,0	;volatile
   688     07C2                     l55:
   689     07C2  0008               	return
   690     07C3                     __end_of_controlLighting:
   691     0002                     ___latbits      equ	2
   692     007E                     btemp           set	126	;btemp
   693     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendI2CData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                    _controlLighting
                   _handleDoorStatus
                            _initI2C
                         _initSystem
                        _sendI2CData
 ---------------------------------------------------------------------------------
 (1) _sendI2CData                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleDoorStatus                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _controlLighting                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _controlLighting
   _handleDoorStatus
   _initI2C
   _initSystem
   _sendI2CData

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      4       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 12 15:05:03 2025

             _SSPSTATbits 0094                        l33 0789                        l50 07BD  
                      l42 07A1                        l51 07BB                        l36 07AE  
                      l60 07CD                        l45 0793                        l55 07C2  
                      l47 0795                        l39 079B                        u10 07A1  
                      u11 07A0                        u20 0790                        u21 078F  
                      u30 07B5                        u31 07B4                        u40 07B9  
                      u41 07B8                        u50 07C1                        u51 07C0  
                      u67 07F1                       l611 07A2                       l613 07A6  
                     l621 0797                       l631 07B9                       l623 078A  
                     l615 07A9                       l607 0780                       l633 07C1  
                     l625 0790                       l617 07AC                       l609 0786  
                     l641 07EB                       l627 07AF                       l619 07AD  
                     l635 07C3                       l629 07B5                       l637 07D7  
                     l639 07E1                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RB3 0033                      _main 07C3  
                    btemp 007E                      start 0000          _handleDoorStatus 078A  
                   ?_main 0070                     _PORTB 0006                     _TRISB 0086  
         __end_of_initI2C 07AF              ?_sendI2CData 0070                     status 0003  
                   wtemp0 007E           __initialization 07FC              __end_of_main 07FC  
       ??_controlLighting 0070                    ??_main 0071                    _SSPADD 0093  
                  _SSPCON 0014                    _SSPBUF 0013                 ??_initI2C 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0070  __end_of_handleDoorStatus 0796  
              __pmaintext 07C3                   _SSPCON2 0091                   _SSPSTAT 0094  
         _controlLighting 07AF                _initSystem 0780                   __ptext1 0796  
                 __ptext2 0780                   __ptext3 07A2                   __ptext4 078A  
                 __ptext5 07AF                   _initI2C 07A2      end_of_initialization 07FC  
               _PORTCbits 0007                 _TRISCbits 0087   __end_of_controlLighting 07C3  
             ?_initSystem 0070       start_initialization 07FC         ?_handleDoorStatus 0070  
      ??_handleDoorStatus 0070                 ___latbits 0002             ??_sendI2CData 0070  
        ?_controlLighting 0070                  ?_initI2C 0070       __end_of_sendI2CData 07A2  
            ??_initSystem 0070               _sendI2CData 0796        __end_of_initSystem 078A  
         sendI2CData@data 0070  
